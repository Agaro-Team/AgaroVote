name: Backend Build & Deploy (No Docker Push)

on:
  push:
    branches: ["main"]
    paths:
      - "AGARO-EVENT-LISTENER/**"
  workflow_dispatch:

env:
  APP_NAME: agaro-event-listener
  DEPLOY_DIR: /opt/agaro-event-listener
  SERVER_USER: ardial
  SERVER_HOST: 92.113.145.8
  PORT: 3002

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build release binary
        run: |
          cd AGARO-EVENT-LISTENER
          cargo build --release
          mkdir -p dist
          cp target/release/agaro-event-listener dist/
          cp -r abi dist/
          cd dist
          tar -czf agaro-event-listener.tar.gz agaro-event-listener abi

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Upload and deploy to server
        run: |
          scp AGARO-EVENT-LISTENER/dist/agaro-event-listener.tar.gz ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }}:/tmp/
          ssh ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} "
            set -e
            echo 'Deploying new version...'
            sudo mkdir -p ${{ env.DEPLOY_DIR }}
            sudo tar -xzf /tmp/agaro-event-listener.tar.gz -C ${{ env.DEPLOY_DIR }}
            sudo rm /tmp/agaro-event-listener.tar.gz

            echo 'Restarting service...'
            sudo systemctl restart agaro-event-listener.service || true
          "
